<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on hzzhu</title>
    <link>https://zhuzaiye.github.io/posts/</link>
    <description>Recent content in Posts on hzzhu</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 06 Jul 2025 10:55:06 +0800</lastBuildDate><atom:link href="https://zhuzaiye.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Feynman学习法</title>
      <link>https://zhuzaiye.github.io/posts/20250706-feynman/</link>
      <pubDate>Sun, 06 Jul 2025 10:55:06 +0800</pubDate>
      
      <guid>https://zhuzaiye.github.io/posts/20250706-feynman/</guid>
      <description>当你看到一只鸟时，即便你知道它的名字，对它也仍然一无所知。 因为你只是知道了人类赋予它的名字，仅此而已。 至于它在夏天横跨整个国家并飞行上万英里时是怎样辨别方向的，没有人知道是怎么回事。​
 那么, 我就需要搞清楚:
 知识的本质是什么? 我如何学习到知识呢?  知识和学习 知识本质是: 实践所需的逻辑来源支撑. 学习本事是: 获取来源支撑的思维方式.
一定要区分出知识和信息的差别, 去掉信息, 抓住知识
学习的思维策略  对具有生长能力的知识点重点学习[关乎知识源头的问题] 对模块化的知识针对性学习[工具性解决性的知识] 对碎片化的知识坚不学习  原理性思维: 一定要搞清楚一门知识, 一个概念背后的原理, 结构和支柱, 没有任何知识是独立存的.
 知识的原理要比知识的本身更有价值 明白知识背后的东西是重要的思维训练过程 至少三遍的输出式的反馈 必须学会简化知识体系, 构建自我的知识体系    选择概念[Concept]
确定要学习的知识点, 并将其写在纸上. 不限于任何方式获取概念的内容.
[还要具备祛伪概念, 选择优质知识来源, 不要浪费时间在低劣来源上]
贯彻到底的一个问题就是: 对我而言最重要的那件事情是什么? 我如何将其本质概念获取到
  教给别人[Teach]
如果没有人教授, 通过录音的方式将给自己听, 自己来听是否听得明白.
标准: 词汇是否专业, 知识结构是否完整, 思维逻辑是否正确, 表达方式是否合理, 语言表述是否流畅.
  找出不足[Review]
在输出的过程中, 如果语言表达卡壳, 或者强行输出, 说明这个知识点美哦与掌握.
需要回顾学习.
  简化知识[Simplify]</description>
    </item>
    
    <item>
      <title>Makefile-ABC</title>
      <link>https://zhuzaiye.github.io/posts/20230325-makefile/</link>
      <pubDate>Sat, 25 Mar 2023 09:18:53 +0800</pubDate>
      
      <guid>https://zhuzaiye.github.io/posts/20230325-makefile/</guid>
      <description>Makefile是组织编译的命令脚本文件-构建生成可执行文件的依赖关系树.
 make根据makefile的规则关系树, 构建出编译可执行程序.
 # 目标: 目标依赖 # 命令 a.out: demo.c  gcc -o $@ $&amp;lt; make指令  windows 环境
 运行make -v会出现:
&amp;#39;make&amp;#39; 不是内部命或外部命令, 也不是可执行的程序, 或批处理文件. # 系统在环境变量中找不到 make 命令执行文件 解决方法:
 找到mingw安装目录, 打开bin目录, 找到mingw32-make.exe 将mingw32-make.exe将该文件重命名为make.exe  编译过程 Makefile  变量 使用 $(val) 获取val的值  .PHONY: clean  CC=g++ BIN=exec OBJS=AddTwoSum.o utils.o  $(BIN): $(OBJS) 	@echo &amp;#34;start compiling...&amp;#34; 	@echo $(CC) 	$(CC) -o $(BIN) $(OBJS) 	@echo &amp;#34;compile done&amp;#34; AddTwoSum.</description>
    </item>
    
    <item>
      <title>Docxtohtml</title>
      <link>https://zhuzaiye.github.io/posts/20220703_docxtohtml/</link>
      <pubDate>Sun, 03 Jul 2022 23:21:04 +0800</pubDate>
      
      <guid>https://zhuzaiye.github.io/posts/20220703_docxtohtml/</guid>
      <description>由于工作中遇到将office的word合并将合并的word转成Html5的任务。
需要处理的相关问题如下：
 按照给定的excel将指定的多个word文档按照顺序合并 将合并后的word文档按照word中的字体、样式转化，并将word中的图片base64处理 将上述过程整理成一个简单小程序，如GUI程序，便于资源组直接进行处理  工具清单    Tool DESC Link     python=3.7 base code https://docs.python.org/3.7/   base64 img base64转码 https://docs.python.org/3.7/library/base64.html?highlight=base64#module-base64   tkinter pyth0n GUI https://docs.python.org/3.7/library/tkinter.html?highlight=tkinter#module-tkinter   docx=0.2.4 加载word文档 https://pypi.org/project/docx/   docxcompose=1.3.4 操作word文档 https://pypi.org/project/docxcompose/   pywin32=304 office的python宏调用包 https://pypi.org/project/pywin32/   lmxl=4.9.0 解析html的包 https://pypi.org/project/lxml/    #! /usr/bin/env python3 # -*- coding: utf-8 -*- # DESC：将docx转化成html  import os import base64 import shutil import tkinter as tk from tkinter import filedialog from lxml import etree from win32com import client as wc from docx import Document from docxcompose.</description>
    </item>
    
  </channel>
</rss>
